CREATE TABLE
  "album_artist_link_simplified" (
    "album_id" INTEGER NOT NULL,
    "artist_id" INTEGER NOT NULL,
    "artist_order" INTEGER DEFAULT 1, -- Use this to indicate primary (1), secondary (2), etc.
    PRIMARY KEY ("album_id", "artist_id"),
    FOREIGN KEY ("album_id") REFERENCES "albums" ("album_id") ON DELETE CASCADE,
    FOREIGN KEY ("artist_id") REFERENCES "artists" ("artist_id") ON DELETE CASCADE
  )
  
  CREATE TABLE
  "albums" (
    "album_id" INTEGER PRIMARY KEY AUTOINCREMENT,
    "album_title" TEXT NOT NULL,
    "spotify_album_id" TEXT UNIQUE NOT NULL, -- Spotify's unique ID for the album
    "album_type" TEXT, -- e.g., 'album', 'single', 'compilation'
    "total_tracks" INTEGER, -- Total tracks on the album
    "release_date" TEXT, -- Release date (YYYY-MM-DD, YYYY-MM, or YYYY)
    "release_date_precision" TEXT, -- 'day', 'month', or 'year'
    "label" TEXT, -- Record label
    "popularity" INTEGER, -- Spotify's popularity score (0-100)
    "cover_image_url" TEXT, -- URL of album cover art (Spotify provides this)
    "spotify_album_uri" TEXT, -- Spotify URI for the album
    "spotify_added_at" TEXT NOT NULL, -- Timestamp (ISO8601) when user added album to library (for "timeshot")
    "last_checked_at" TEXT -- Timestamp (ISO8601) of when this record was last synced/verified
  )
  
  CREATE TABLE
  "artists" (
    "artist_id" INTEGER PRIMARY KEY AUTOINCREMENT,
    "artist_name" TEXT NOT NULL UNIQUE,
    "spotify_artist_id" TEXT UNIQUE, -- Spotify's unique ID for the artist
    "artist_image_url" TEXT, -- URL of artist's image (Spotify provides this)
    "popularity" INTEGER, -- Spotify's popularity score (0-100)
    "followers_total" INTEGER, -- Total number of followers on Spotify
    "spotify_artist_uri" TEXT, -- Spotify URI for the artist
    "last_checked_at" TEXT -- Timestamp (ISO8601) of when this record was last synced/verified
  )
  
  CREATE TABLE
  "song_album_link" (
    "song_id" INTEGER NOT NULL,
    "album_id" INTEGER NOT NULL,
    "track_number" INTEGER NOT NULL, -- The track number of the song on this specific album
    "disc_number" INTEGER DEFAULT 1, -- The disc number of the song on this specific album
    PRIMARY KEY ("song_id", "album_id"),
    FOREIGN KEY ("song_id") REFERENCES "songs" ("song_id") ON DELETE CASCADE,
    FOREIGN KEY ("album_id") REFERENCES "albums" ("album_id") ON DELETE CASCADE
  )
  
  CREATE TABLE
  "song_artist_link" (
    "song_id" INTEGER NOT NULL,
    "artist_id" INTEGER NOT NULL,
    "artist_order" INTEGER DEFAULT 1, -- To store the order of artists if multiple
    PRIMARY KEY ("song_id", "artist_id"), -- Assuming an artist is listed once per song
    FOREIGN KEY ("song_id") REFERENCES "songs" ("song_id") ON DELETE CASCADE,
    FOREIGN KEY ("artist_id") REFERENCES "artists" ("artist_id") ON DELETE CASCADE
  )
  
  CREATE TABLE
  "songs" (
    "song_id" INTEGER PRIMARY KEY AUTOINCREMENT,
    "song_title" TEXT NOT NULL,
    "spotify_song_id" TEXT UNIQUE NOT NULL, -- Spotify's unique ID for the track
    "duration_ms" INTEGER, -- Duration of the song in milliseconds
    "is_explicit" INTEGER, -- Boolean (0 or 1) if the track has explicit content
    "spotify_track_uri" TEXT, -- Spotify URI for the track
    "last_checked_at" TEXT -- Timestamp (ISO8601) of when this record was last synced/verified
  )
  
